name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          target: wasm32-unknown-unknown
            
    - uses: jetli/trunk-action@v0.1.0
      with:
        # Optional version of trunk to install(eg. 'v0.8.1', 'latest')
        version: 'latest'
    - name: Fetch
      run: cargo fetch
    - name: Build
      run: trunk build --release
    - name: Optimize wasm
      run: 'npx wasm-opt -Os -o dist/competency-938275c2d389998c_bg.wasm dist/competency-938275c2d389998c_bg.wasm'

    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v1.2
      with:
        publish-dir: './dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 1

